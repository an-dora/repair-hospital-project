// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Data.Migrations
{
    [DbContext(typeof(WebAppDbContext))]
    [Migration("20230627130429_delete-data-AppRolePermission")]
    partial class deletedataAppRolePermission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.Data.Entities.AppCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppCompany");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AppCompanyDepartment");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DigitalInfo")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameNoAccent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("IdentityDoI")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityPoI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YoB")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCode");

                    b.HasIndex("IdentityCode");

                    b.ToTable("AppCompanyPatient");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatientHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodPressure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Classification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyPatientId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dentomaxillofacial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalMedicine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("InternalMedicine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Ophthalmology")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Otorhinolaryngology")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Pulse")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Test")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Weigth")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyPatientId");

                    b.ToTable("AppCompanyPatientHistory");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatientImported", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DigitalInfo")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameNoAccent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("IdentityDoI")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityPoI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDuplicate")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YoB")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCode");

                    b.HasIndex("IdentityCode");

                    b.ToTable("AppCompanyPatientImported");
                });

            modelBuilder.Entity("App.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Quản trị toàn bộ hệ thống",
                            Name = "Quản trị hệ thống",
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("MstPermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("MstPermissionId");

                    b.ToTable("AppRolePermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1101,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1102,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1103,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1104,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1105,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1001,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1002,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1003,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1004,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1005,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1006,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1007,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1008,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AppRoleId = 1,
                            CreatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MstPermissionId = 1205,
                            UpdatedDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BlockedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BlockedTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("varbinary(200)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(200)
                        .HasColumnType("varbinary(200)");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Thành phố Hồ Chí Minh",
                            AppRoleId = 1,
                            CreatedBy = -1,
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin_test@gmail.com",
                            FullName = "Obama",
                            PasswordHash = new byte[] { 225, 179, 35, 108, 189, 236, 14, 46, 215, 201, 64, 182, 201, 129, 168, 131, 95, 57, 92, 254, 68, 238, 21, 220, 163, 50, 202, 60, 115, 153, 21, 22, 95, 219, 196, 33, 216, 154, 67, 130, 182, 111, 157, 75, 154, 192, 162, 124, 172, 122, 250, 145, 8, 229, 159, 22, 6, 30, 255, 135, 27, 228, 245, 108 },
                            PasswordSalt = new byte[] { 88, 229, 199, 160, 78, 210, 228, 203, 124, 120, 197, 56, 253, 103, 15, 168, 81, 202, 221, 245, 136, 23, 20, 226, 32, 191, 174, 118, 221, 199, 33, 135, 43, 50, 241, 98, 255, 245, 128, 1, 65, 236, 189, 103, 49, 76, 74, 126, 246, 113, 111, 0, 17, 233, 129, 236, 216, 39, 157, 13, 125, 209, 67, 95, 154, 70, 179, 121, 179, 200, 253, 131, 150, 117, 10, 188, 20, 244, 144, 171, 114, 149, 62, 17, 118, 160, 91, 85, 196, 183, 215, 124, 167, 196, 116, 24, 25, 193, 76, 12, 179, 168, 191, 173, 28, 206, 139, 186, 196, 21, 89, 97, 240, 59, 152, 178, 41, 64, 222, 45, 18, 69, 0, 50, 114, 103, 231, 203 },
                            PhoneNumber1 = "0928666158",
                            PhoneNumber2 = "0928666156",
                            UpdatedBy = -1,
                            UpdatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.MstPermission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MstPermission");

                    b.HasData(
                        new
                        {
                            Id = 1103,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1105,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1104,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Sửa quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1102,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1101,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1006,
                            Code = "BLOCK",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Khóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1003,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1008,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1007,
                            Code = "UNBLOCK",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Mở khóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1004,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1005,
                            Code = "UPDATE_PWD",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Đổi mật khẩu",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1002,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1001,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1205,
                            Code = "MANAGER",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Quản lý file hệ thống",
                            GroupName = "Quản lý file",
                            Table = "FileManager"
                        },
                        new
                        {
                            Id = 1303,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm công ty",
                            GroupName = "Quản lý công ty",
                            Table = "AppCompany"
                        },
                        new
                        {
                            Id = 1305,
                            Code = "HIDE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Ẩn công ty",
                            GroupName = "Quản lý công ty",
                            Table = "AppCompany"
                        },
                        new
                        {
                            Id = 1306,
                            Code = "UNHIDE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Hiện công ty",
                            GroupName = "Quản lý công ty",
                            Table = "AppCompany"
                        },
                        new
                        {
                            Id = 1304,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật công ty",
                            GroupName = "Quản lý công ty",
                            Table = "AppCompany"
                        },
                        new
                        {
                            Id = 1301,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách công ty",
                            GroupName = "Quản lý công ty",
                            Table = "AppCompany"
                        },
                        new
                        {
                            Id = 1403,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1405,
                            Code = "HIDE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Ẩn bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1406,
                            Code = "UNHIDE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Hiện bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1404,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1401,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1407,
                            Code = "IMPORT_EXCEL",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Import dữ liệu bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1408,
                            Code = "PRINT_HEALTH_CERT",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "In phiếu khám sức khỏe",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1409,
                            Code = "EXPORT_EXCEL",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Export dữ liệu bệnh nhân",
                            GroupName = "Quản lý bệnh nhân",
                            Table = "AppCompanyPatient"
                        },
                        new
                        {
                            Id = 1501,
                            Code = "INPUT_RESULT",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Nhập kết quả khám",
                            GroupName = "Quản lý lịch sử khám",
                            Table = "AppCompanyPatientHistory"
                        },
                        new
                        {
                            Id = 1502,
                            Code = "VIEW_RESULT",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem kết quả khám",
                            GroupName = "Quản lý lịch sử khám",
                            Table = "AppCompanyPatientHistory"
                        },
                        new
                        {
                            Id = 1503,
                            Code = "UPDATE_RESULT",
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Sửa kết quả khám",
                            GroupName = "Quản lý lịch sử khám",
                            Table = "AppCompanyPatientHistory"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyDepartment", b =>
                {
                    b.HasOne("App.Data.Entities.AppCompany", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatient", b =>
                {
                    b.HasOne("App.Data.Entities.AppCompany", "AppCompany")
                        .WithMany("CompanyPatients")
                        .HasForeignKey("CompanyId");

                    b.HasOne("App.Data.Entities.AppCompanyDepartment", "Department")
                        .WithMany("Patients")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("AppCompany");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatientHistory", b =>
                {
                    b.HasOne("App.Data.Entities.AppCompanyPatient", "Patient")
                        .WithMany("PatientHistories")
                        .HasForeignKey("CompanyPatientId");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatientImported", b =>
                {
                    b.HasOne("App.Data.Entities.AppCompany", "AppCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("App.Data.Entities.AppCompanyDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("AppCompany");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("App.Data.Entities.AppRolePermission", b =>
                {
                    b.HasOne("App.Data.Entities.AppRole", "AppRole")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Data.Entities.MstPermission", "MstPermission")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("MstPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("MstPermission");
                });

            modelBuilder.Entity("App.Data.Entities.AppUser", b =>
                {
                    b.HasOne("App.Data.Entities.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleId");

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompany", b =>
                {
                    b.Navigation("CompanyPatients");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyDepartment", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("App.Data.Entities.AppCompanyPatient", b =>
                {
                    b.Navigation("PatientHistories");
                });

            modelBuilder.Entity("App.Data.Entities.AppRole", b =>
                {
                    b.Navigation("AppRolePermissions");

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("App.Data.Entities.MstPermission", b =>
                {
                    b.Navigation("AppRolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
